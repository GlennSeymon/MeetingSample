// <auto-generated />
using System;
using MeetingSample.WebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MeetingSample.WebAPI.Migrations
{
    [DbContext(typeof(MeetingSampleWebAPIContext))]
    [Migration("20180628034144_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MeetingSample.WebAPI.Models.Meeting", b =>
                {
                    b.Property<int>("MeetCode")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MeetCatArea");

                    b.Property<int>("MeetCatCode");

                    b.Property<DateTime>("MeetDate");

                    b.Property<string>("StateDesc");

                    b.Property<string>("Title");

                    b.Property<int>("VenueCode");

                    b.HasKey("MeetCode");

                    b.ToTable("Meetings");

                    b.HasData(
                        new { MeetCode = 1, MeetCatArea = "MC", MeetCatCode = 0, MeetDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), StateDesc = "VIC", Title = "Meeting 1", VenueCode = 151 },
                        new { MeetCode = 2, MeetCatArea = "MC", MeetCatCode = 0, MeetDate = new DateTime(2018, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), StateDesc = "VIC", Title = "Meeting 2", VenueCode = 151 },
                        new { MeetCode = 3, MeetCatArea = "MC", MeetCatCode = 0, MeetDate = new DateTime(2018, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), StateDesc = "VIC", Title = "Meeting 3", VenueCode = 151 },
                        new { MeetCode = 4, MeetCatArea = "MC", MeetCatCode = 0, MeetDate = new DateTime(2018, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), StateDesc = "VIC", Title = "Meeting 4", VenueCode = 151 },
                        new { MeetCode = 5, MeetCatArea = "MC", MeetCatCode = 0, MeetDate = new DateTime(2018, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), StateDesc = "VIC", Title = "Meeting 5", VenueCode = 151 }
                    );
                });

            modelBuilder.Entity("MeetingSample.WebAPI.Models.Race", b =>
                {
                    b.Property<int>("RaceCode")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Distance");

                    b.Property<int?>("MeetingMeetCode");

                    b.Property<string>("Name");

                    b.Property<int>("RaceNumber");

                    b.HasKey("RaceCode");

                    b.HasIndex("MeetingMeetCode");

                    b.ToTable("Races");

                    b.HasData(
                        new { RaceCode = 1, Distance = 1000, Name = "Meeting 1, Race 1", RaceNumber = 1 },
                        new { RaceCode = 2, Distance = 1200, Name = "Meeting 1, Race 2", RaceNumber = 2 },
                        new { RaceCode = 3, Distance = 1300, Name = "Meeting 1, Race 3", RaceNumber = 3 },
                        new { RaceCode = 4, Distance = 1000, Name = "Meeting 2, Race 1", RaceNumber = 1 },
                        new { RaceCode = 5, Distance = 1200, Name = "Meeting 2, Race 2", RaceNumber = 2 },
                        new { RaceCode = 6, Distance = 1300, Name = "Meeting 2, Race 3", RaceNumber = 3 },
                        new { RaceCode = 7, Distance = 1000, Name = "Meeting 2, Race 4", RaceNumber = 4 }
                    );
                });

            modelBuilder.Entity("MeetingSample.WebAPI.Models.Race", b =>
                {
                    b.HasOne("MeetingSample.WebAPI.Models.Meeting", "Meeting")
                        .WithMany("Races")
                        .HasForeignKey("MeetingMeetCode");
                });
#pragma warning restore 612, 618
        }
    }
}
